@model IEnumerable<LibraryApp.Models.Project>

@{
    ViewData["Title"] = "Project Management";
}

<!-- Project Management Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-project-diagram me-2"></i>Project Management</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Project
    </a>
</div>

<!-- Navigation Tabs for Project Features -->
<ul class="nav nav-tabs mb-4" id="projectTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="projects-list-tab" data-bs-toggle="tab" data-bs-target="#projects-list" type="button" role="tab">
            <i class="fas fa-list me-1"></i>All Projects
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="project-submissions-tab" data-bs-toggle="tab" data-bs-target="#project-submissions" type="button" role="tab">
            <i class="fas fa-upload me-1"></i>Submissions
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="project-analytics-tab" data-bs-toggle="tab" data-bs-target="#project-analytics" type="button" role="tab">
            <i class="fas fa-chart-bar me-1"></i>Analytics
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="project-workflow-tab" data-bs-toggle="tab" data-bs-target="#project-workflow" type="button" role="tab">
            <i class="fas fa-tasks me-1"></i>Workflow
        </button>
    </li>
</ul>

<!-- Tab Content -->
<div class="tab-content" id="projectTabContent">
    <!-- Projects List Tab -->
    <div class="tab-pane fade show active" id="projects-list" role="tabpanel" aria-labelledby="projects-list-tab">

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="card-title mb-0">
            <i class="fas fa-filter text-primary me-2"></i>Search & Filter
        </h5>
    </div>
    <div class="card-body">
        <form method="get">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="searchTitle" class="form-label">Search by Title</label>
                    <input type="text" class="form-control" id="searchTitle" name="searchTitle" 
                           placeholder="Enter project title..." value="@ViewData["SearchTitle"]">
                </div>
                <div class="col-md-3 mb-3">
                    <label for="statusFilter" class="form-label">Filter by Status</label>
                    <select class="form-select" id="statusFilter" name="statusFilter">
                        <option value="">All Statuses</option>
                        @foreach (var status in Enum.GetValues<LibraryApp.Models.ProjectStatus>())
                        {
                            <option value="@status" selected="@(ViewData["StatusFilter"]?.ToString() == status.ToString())">
                                @status
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3 mb-3">
                    <label for="supervisorFilter" class="form-label">Filter by Supervisor</label>
                    <select class="form-select" id="supervisorFilter" name="supervisorFilter">
                        <option value="">All Supervisors</option>
                            @if (ViewData["Supervisors"] is IEnumerable<dynamic> supervisors)
                            {
                                @foreach (var supervisor in supervisors)
                                {
                                    <option value="@supervisor.Id" selected="@(ViewData["SupervisorFilter"]?.ToString() == supervisor.Id.ToString())">
                                        @supervisor.DisplayText
                                    </option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-2 mb-3">
                        <label class="form-label text-professional">&nbsp;</label>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-outline-primary btn-professional">
                                <i class="fas fa-search me-2"></i>Search
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model.Any())
    {
        <!-- Projects Table -->
        <div class="content-card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title-professional">
                        <i class="fas fa-list text-primary me-2"></i>Projects (@Model.Count())
                    </h5>
                    <button class="btn btn-outline-secondary btn-sm btn-professional" onclick="exportProjects()">
                        <i class="fas fa-download me-1"></i>Export
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th class="text-professional" style="font-weight: 700;">
                                    @Html.DisplayNameFor(model => model.Title)
                                </th>
                                <th class="text-professional" style="font-weight: 700;">
                                    @Html.DisplayNameFor(model => model.Student)
                                </th>
                                <th class="text-professional" style="font-weight: 700;">
                                    @Html.DisplayNameFor(model => model.Supervisor)
                                </th>
                                <th class="text-professional" style="font-weight: 700;">
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th class="text-professional" style="font-weight: 700;">
                                    Submission Date
                                </th>
                                <th class="text-professional" style="font-weight: 700;">
                                    Defense Date
                                </th>
                                <th class="text-center text-professional" style="font-weight: 700;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model) {
                                <tr>
                                    <td>
                                        <h6 class="mb-1 text-professional" style="font-weight: 600;">@Html.DisplayFor(modelItem => item.Title)</h6>
                                        @if (!string.IsNullOrEmpty(item.Keywords))
                                        {
                                            <div>
                                                @foreach (var keyword in item.Keywords.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(3))
                                                {
                                                    <span class="badge bg-light text-dark me-1" style="font-size: 0.7rem;">@keyword.Trim()</span>
                                                }
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="text-professional" style="font-weight: 600;">
                                            @Html.DisplayFor(modelItem => item.Student.FirstName) @Html.DisplayFor(modelItem => item.Student.LastName)
                                        </div>
                                        <small class="text-muted-professional">@Html.DisplayFor(modelItem => item.Student.StudentNumber)</small>
                                    </td>
                                    <td>
                                        <div class="text-professional" style="font-weight: 600;">
                                            @Html.DisplayFor(modelItem => item.Supervisor.Title) @Html.DisplayFor(modelItem => item.Supervisor.FirstName) @Html.DisplayFor(modelItem => item.Supervisor.LastName)
                                        </div>
                                        @if (!string.IsNullOrEmpty(item.Supervisor.Specialization))
                                        {
                                            <small class="text-muted-professional">@item.Supervisor.Specialization</small>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge badge-professional bg-@(item.Status == LibraryApp.Models.ProjectStatus.Completed ? "success" : 
                                                                  item.Status == LibraryApp.Models.ProjectStatus.InProgress ? "warning" : 
                                                                  item.Status == LibraryApp.Models.ProjectStatus.Approved ? "info" : 
                                                                  item.Status == LibraryApp.Models.ProjectStatus.Defended ? "success" :
                                                                  item.Status == LibraryApp.Models.ProjectStatus.Published ? "success" : "secondary")">
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </span>
                                    </td>
                                    <td class="text-professional">
                                        @Html.DisplayFor(modelItem => item.SubmissionDate)
                                    </td>
                                    <td>
                                        @if (item.DefenseDate.HasValue)
                                        {
                                            <span class="text-professional">@Html.DisplayFor(modelItem => item.DefenseDate)</span>
                                        }
                                        else
                                        {
                                            <em class="text-muted-professional">Not scheduled</em>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" 
                                               class="btn btn-sm btn-outline-info btn-professional" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.Id" 
                                               class="btn btn-sm btn-outline-warning btn-professional" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" 
                                               class="btn btn-sm btn-outline-danger btn-professional" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="content-card">
            <div class="card-body text-center py-5">
                <i class="fas fa-folder-open fa-4x text-muted mb-4"></i>
                <h4 class="text-professional mb-3">No Projects Found</h4>
                <p class="text-muted-professional mb-4">Get started by creating your first graduation project or adjust your search criteria.</p>
                <a asp-action="Create" class="btn btn-primary btn-professional">
                    <i class="fas fa-plus me-2"></i>Create New Project
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function exportProjects() {
            console.log('Exporting projects...');
            // Export functionality would be implemented here
        }
    </script>
}