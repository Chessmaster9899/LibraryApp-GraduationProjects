@model UserManagementViewModel
@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h1><i class="fas fa-users-cog"></i> User Management</h1>
            <p class="lead">Manage all system users and monitor activity</p>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        @foreach (var stat in Model.UserStatistics)
        {
            <div class="col-md-2">
                <div class="card bg-@(stat.Key.Contains("Active") ? "success" : stat.Key.Contains("Total") && !stat.Key.Contains("Users") ? "primary" : "info") text-dark">
                    <div class="card-body text-center">
                        <h3>@stat.Value</h3>
                        <p class="mb-0">@stat.Key.Replace("Total", "").Replace("Active", "Active ")</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- User Tables -->
    <div class="row">
        <!-- Students -->
        <div class="col-lg-4 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4><i class="fas fa-user-graduate"></i> Students (@Model.Students.Count)</h4>
                    <div class="btn-group btn-group-sm">
                        <a asp-controller="Students" asp-action="Create" class="btn btn-success">
                            <i class="fas fa-plus"></i> Add Student
                        </a>
                        <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                            Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="exportUsers('students')"><i class="fas fa-download"></i> Export CSV</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('students', 'activate')"><i class="fas fa-check"></i> Bulk Activate</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('students', 'deactivate')"><i class="fas fa-ban"></i> Bulk Deactivate</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-sm table-hover mb-0">
                            <thead class="table-dark sticky-top">
                                <tr>
                                    <th><input type="checkbox" id="selectAllStudents"></th>
                                    <th>Name</th>
                                    <th>ID</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var student in Model.Students)
                                {
                                    <tr>
                                        <td><input type="checkbox" class="student-checkbox" value="@student.Id"></td>
                                        <td>
                                            <strong>@student.FullName</strong><br>
                                            <small class="text-muted">@student.Department.Name</small>
                                        </td>
                                        <td>@student.StudentNumber</td>
                                        <td>
                                            <span class="badge bg-@(student.LastLogin.HasValue ? "success" : "warning")">
                                                @(student.LastLogin.HasValue ? "Active" : "Inactive")
                                            </span>
                                            @if (student.MustChangePassword)
                                            {
                                                <br><span class="badge bg-info">Pwd Reset</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a asp-controller="Students" asp-action="Details" asp-route-id="@student.Id" 
                                                   class="btn btn-outline-primary btn-sm" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-controller="Students" asp-action="Edit" asp-route-id="@student.Id" 
                                                   class="btn btn-outline-secondary btn-sm" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Professors -->
        <div class="col-lg-4 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4><i class="fas fa-chalkboard-teacher"></i> Professors (@Model.Professors.Count)</h4>
                    <div class="btn-group btn-group-sm">
                        <a asp-controller="Professors" asp-action="Create" class="btn btn-success">
                            <i class="fas fa-plus"></i> Add Professor
                        </a>
                        <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                            Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="exportUsers('professors')"><i class="fas fa-download"></i> Export CSV</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('professors', 'activate')"><i class="fas fa-check"></i> Bulk Activate</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('professors', 'deactivate')"><i class="fas fa-ban"></i> Bulk Deactivate</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-sm table-hover mb-0">
                            <thead class="table-dark sticky-top">
                                <tr>
                                    <th><input type="checkbox" id="selectAllProfessors"></th>
                                    <th>Name</th>
                                    <th>ID</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var professor in Model.Professors)
                                {
                                    <tr>
                                        <td><input type="checkbox" class="professor-checkbox" value="@professor.Id"></td>
                                        <td>
                                            <strong>@professor.DisplayName</strong><br>
                                            <small class="text-muted">@professor.Department.Name</small>
                                        </td>
                                        <td>@professor.ProfessorId</td>
                                        <td>
                                            <span class="badge bg-@(professor.LastLogin.HasValue ? "success" : "warning")">
                                                @(professor.LastLogin.HasValue ? "Active" : "Inactive")
                                            </span>
                                            @if (professor.MustChangePassword)
                                            {
                                                <br><span class="badge bg-info">Pwd Reset</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a asp-controller="Professors" asp-action="Details" asp-route-id="@professor.Id" 
                                                   class="btn btn-outline-primary btn-sm" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-controller="Professors" asp-action="Edit" asp-route-id="@professor.Id" 
                                                   class="btn btn-outline-secondary btn-sm" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Administrators -->
        <div class="col-lg-4 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4><i class="fas fa-user-shield"></i> Administrators (@Model.Admins.Count)</h4>
                    <div class="btn-group btn-group-sm">
                        <button type="button" class="btn btn-success" onclick="createAdmin()">
                            <i class="fas fa-plus"></i> Add Admin
                        </button>
                        <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                            Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="exportUsers('admins')"><i class="fas fa-download"></i> Export CSV</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('admins', 'activate')"><i class="fas fa-check"></i> Bulk Activate</a></li>
                            <li><a class="dropdown-item" href="#" onclick="bulkAction('admins', 'deactivate')"><i class="fas fa-ban"></i> Bulk Deactivate</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-sm table-hover mb-0">
                            <thead class="table-dark sticky-top">
                                <tr>
                                    <th><input type="checkbox" id="selectAllAdmins"></th>
                                    <th>Name</th>
                                    <th>Username</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var admin in Model.Admins)
                                {
                                    <tr>
                                        <td><input type="checkbox" class="admin-checkbox" value="@admin.Id"></td>
                                        <td>
                                            <strong>@(admin.FirstName + " " + admin.LastName)</strong><br>
                                            <small class="text-muted">@admin.Email</small>
                                        </td>
                                        <td>@admin.Username</td>
                                        <td>
                                            <span class="badge bg-@(admin.IsActive ? (admin.LastLogin.HasValue ? "success" : "warning") : "danger")">
                                                @(admin.IsActive ? (admin.LastLogin.HasValue ? "Active" : "Inactive") : "Disabled")
                                            </span>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-primary btn-sm" 
                                                        onclick="viewAdmin(@admin.Id)" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                        onclick="editAdmin(@admin.Id)" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Activity Overview -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4><i class="fas fa-chart-line"></i> User Activity Overview</h4>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="text-primary">@(Model.Students.Count(s => s.LastLogin >= DateTime.Now.AddDays(-7)))</h3>
                                <p class="text-muted mb-0">Students active this week</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="text-success">@(Model.Professors.Count(p => p.LastLogin >= DateTime.Now.AddDays(-7)))</h3>
                                <p class="text-muted mb-0">Professors active this week</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h3 class="text-info">@(Model.Students.Count(s => s.LastLogin >= DateTime.Now.AddDays(-30)))</h3>
                                <p class="text-muted mb-0">Students active this month</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <h3 class="text-warning">@(Model.Students.Count(s => !s.LastLogin.HasValue) + Model.Professors.Count(p => !p.LastLogin.HasValue))</h3>
                            <p class="text-muted mb-0">Never logged in</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Select all functionality
        $('#selectAllStudents').change(function() {
            $('.student-checkbox').prop('checked', this.checked);
        });
        $('#selectAllProfessors').change(function() {
            $('.professor-checkbox').prop('checked', this.checked);
        });
        $('#selectAllAdmins').change(function() {
            $('.admin-checkbox').prop('checked', this.checked);
        });

        function exportUsers(userType) {
            // This would typically make an AJAX call to export users
            alert('Export functionality for ' + userType + ' would be implemented here.');
        }

        function bulkAction(userType, action) {
            const checkboxes = $('.' + userType.slice(0, -1) + '-checkbox:checked');
            if (checkboxes.length === 0) {
                alert('Please select users to ' + action);
                return;
            }
            
            if (confirm('Are you sure you want to ' + action + ' ' + checkboxes.length + ' ' + userType + '?')) {
                // This would make an AJAX call to perform bulk action
                alert('Bulk ' + action + ' for ' + checkboxes.length + ' ' + userType + ' would be implemented here.');
            }
        }

        function createAdmin() {
            // This would open a modal or redirect to create admin page
            alert('Create admin functionality would be implemented here.');
        }

        function viewAdmin(adminId) {
            // This would show admin details
            alert('View admin ' + adminId + ' details would be implemented here.');
        }

        function editAdmin(adminId) {
            // This would allow editing admin
            alert('Edit admin ' + adminId + ' functionality would be implemented here.');
        }

        $(document).ready(function() {
            // Add DataTable for larger user lists
            if ($('tbody tr').length > 10) {
                $('table').each(function() {
                    if (!$.fn.DataTable.isDataTable(this)) {
                        $(this).DataTable({
                            pageLength: 10,
                            searching: true,
                            ordering: true,
                            columnDefs: [
                                { targets: [0, 4], orderable: false } // Checkbox and Actions columns
                            ]
                        });
                    }
                });
            }

            // Auto-refresh every 2 minutes
            setTimeout(function() {
                location.reload();
            }, 120000);
        });
    </script>
}